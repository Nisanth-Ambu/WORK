/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simplereminder;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import static simplereminder.SimpleReminder.stmnt;

/**
 *
 * @author Frankenstein
 */
public class ReminderHome extends javax.swing.JFrame {
private static String id=null;
    /**
     * Creates new form ReminderHome
     */
    public ReminderHome() {
        initComponents();
        firstRules();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNewTitle = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNewContent = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BtSave = new javax.swing.JButton();
        BtUpdate = new javax.swing.JButton();
        BtCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BtDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(789, 836));
        setMinimumSize(new java.awt.Dimension(789, 836));
        setPreferredSize(new java.awt.Dimension(789, 836));
        getContentPane().setLayout(null);

        txtNewTitle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewTitleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNewTitleKeyReleased(evt);
            }
        });
        getContentPane().add(txtNewTitle);
        txtNewTitle.setBounds(160, 170, 380, 32);

        txtNewContent.setColumns(20);
        txtNewContent.setRows(5);
        txtNewContent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewContentKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNewContentKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtNewContent);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(160, 240, 380, 108);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(60, 390, 660, 340);

        BtSave.setText("Save");
        BtSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtSaveActionPerformed(evt);
            }
        });
        getContentPane().add(BtSave);
        BtSave.setBounds(610, 170, 111, 25);

        BtUpdate.setText("Update");
        BtUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(BtUpdate);
        BtUpdate.setBounds(610, 220, 110, 25);

        BtCancel.setText("Cancel");
        BtCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCancelActionPerformed(evt);
            }
        });
        getContentPane().add(BtCancel);
        BtCancel.setBounds(610, 320, 110, 25);

        jLabel1.setText("Title");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(80, 180, 55, 15);

        jLabel2.setText("Content");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(80, 250, 60, 15);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("REMINDER");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(310, 20, 190, 76);

        BtDelete.setText("Delete");
        BtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(BtDelete);
        BtDelete.setBounds(610, 270, 110, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstRules()
    {   BtSave.setEnabled(true);
        BtUpdate.setEnabled(false);
        BtDelete.setEnabled(false);
         insertDataIntoTable();
    }
    private void txtNewTitleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewTitleKeyPressed
        String ttl=txtNewTitle.getText();
        if(evt.getKeyCode()==8)
        {
            
        }
        else if(ttl.length()>=20)
        {
            txtNewTitle.setEditable(false);
        }
    }//GEN-LAST:event_txtNewTitleKeyPressed

    private void txtNewTitleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewTitleKeyReleased
     txtNewTitle.setEditable(true);
    }//GEN-LAST:event_txtNewTitleKeyReleased

    private void txtNewContentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewContentKeyPressed
           String contnt=txtNewContent.getText();
        if(evt.getKeyCode()==8)
        {
            
        }
        else if(contnt.length()>=65)
        {
            txtNewContent.setEditable(false);
        }
    }//GEN-LAST:event_txtNewContentKeyPressed

    private void txtNewContentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewContentKeyReleased
          txtNewContent.setEditable(true);
    }//GEN-LAST:event_txtNewContentKeyReleased

    private void BtSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtSaveActionPerformed
        String title=txtNewTitle.getText().trim();
        String content=txtNewContent.getText().trim();
        txtNewTitle.setText(title);
        txtNewContent.setText(content);
    
        if(title.length()==0 || content.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please fill both title and content","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
          
            String date=new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
            
            try {
                  stmnt.executeUpdate("INSERT INTO `remind`(`date`, `title`, `content`) VALUES ('"+date+"','"+title+"','"+content+"')");
                  insertDataIntoTable();
                  txtNewTitle.setText("");
                  txtNewContent.setText("");
                 JOptionPane.showMessageDialog(rootPane, "Saved");
             
            } catch (SQLException ex) {
                Logger.getLogger(ReminderHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BtSaveActionPerformed

    private void BtCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCancelActionPerformed
       firstRules();
         txtNewTitle.setText("");
         txtNewContent.setText("");
    }//GEN-LAST:event_BtCancelActionPerformed

    private void BtUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtUpdateActionPerformed
        String title=txtNewTitle.getText().trim();
        String content=txtNewContent.getText().trim();
        txtNewTitle.setText(title);
        txtNewContent.setText(content);
        if(title.length()==0 || content.length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please fill both title and content","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            String date=new SimpleDateFormat("yyyy/MM/dd").format(Calendar.getInstance().getTime());
            
            try {
                  stmnt.executeUpdate("UPDATE `remind` SET `date`='"+date+"',`title`='"+title+"',`content`='"+content+"' WHERE id="+id+"");
                  insertDataIntoTable();
                 JOptionPane.showMessageDialog(rootPane, "Updated");
             
            } catch (SQLException ex) {
                Logger.getLogger(ReminderHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BtUpdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int column=0; 
       id=null;
       int row=jTable1.getSelectedRow();
        id= jTable1.getValueAt(row, column).toString();
       jTable1.getValueAt(row, 2).toString();
       jTable1.getValueAt(row, 3).toString();
        if(id!=null)
        {
           txtNewTitle.setText(jTable1.getValueAt(row, 2).toString());
           txtNewContent.setText(jTable1.getValueAt(row, 3).toString());  
             BtUpdate.setEnabled(true);
        BtDelete.setEnabled(true);
           BtSave.setEnabled(false);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void BtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtDeleteActionPerformed
        try {
                  stmnt.executeUpdate("DELETE FROM `remind` WHERE id="+id+"");
                      txtNewTitle.setText("");
                    txtNewContent.setText("");
                    firstRules();
                  insertDataIntoTable();
                 JOptionPane.showMessageDialog(rootPane, "Deleted");
             
            } catch (SQLException ex) {
                Logger.getLogger(ReminderHome.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_BtDeleteActionPerformed

    private void insertDataIntoTable()
    {
         try
        {
            ResultSet r=stmnt.executeQuery("SELECT * FROM remind");
                jTable1.setModel(DbUtils.resultSetToTableModel(r));
        }
        catch(SQLException v)
        {
            System.out.println(v);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReminderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReminderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReminderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReminderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReminderHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtCancel;
    private javax.swing.JButton BtDelete;
    private javax.swing.JButton BtSave;
    private javax.swing.JButton BtUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtNewContent;
    private javax.swing.JTextField txtNewTitle;
    // End of variables declaration//GEN-END:variables
}
